import React, { useState, useEffect } from "react";
import {
  ScrollView,
  View,
  StyleSheet,
  FlatList,
  ActivityIndicator,
} from "react-native";
import { Card, Button, Text, Avatar, Input } from "react-native-elements";
import PostCard from "./../components/PostCard";
import HeaderHome from "../components/HeaderHome";
import { AntDesign, Entypo } from "@expo/vector-icons";
import { AuthContext } from "../providers/AuthProvider";
import { useNetInfo } from "@react-native-community/netinfo";
import * as firebase from "firebase";
import "firebase/firestore";


const CommentScreen = (props) => {
  const [comments, setComments] = useState([]);
  const [loading, setLoading] = useState(false);
  const [input, setInput] = useState("");
    

  const loadPosts = async () => {
    setLoading(true);
    firebase
      .firestore()
      .collection("posts")
      .orderBy("created_at", "desc")
      .onSnapshot((querySnapshot) => {
        let temp_posts = [];
        querySnapshot.forEach((doc) => {
            if(doc.pId==props.title.postId){
          temp_comments.push({
            id: doc.id,
            data: doc.data(),
          });
            }
        });
        setComments(temp_posts);
        setLoading(false);
      })
      .catch((error) => {
        setLoading(false);
        alert(error);
      });
  };


  useEffect(() => {
    loadPosts();
  }, []);



  return (
    <AuthContext.Consumer>
      {(auth) => (


        <View>
          <HeaderHome
            DrawerFunction={() => {
              props.navigation.toggleDrawer();
            }}
          />


          <Card>

            <Input
              placeholder="Leave a Comment?"
              onChangeText={(currentText) => {
                setInput(currentText);
              }}
            />

            <Button
              title="Comment"
              onPress={function () {
                setLoading(true);

                firebase
                  .firestore()
                  .collection("comments")

                  .add({
                    userId: auth.CurrentUser.uid,
                    body: input,
                    author: auth.CurrentUser.displayName,
                    created_at: firebase.firestore.Timestamp.now(),
                    pId: props.title.postId,
                  })

                  .then(() => {
                    setLoading(false);
                  })

                  .catch((error) => {
                    setLoading(false);
                    alert(error);
                  });
              }}
            />
          </Card>


          <ActivityIndicator size="large" color="red" animating={loading} />


          <FlatList
            data={posts}
            renderItem={({ item }) => {
              return (
                <PostCard
                  author={item.data.author}
                  title={item.id}
                  body={item.data.body}
                />
              );
            }}
          />

        </View>
      )}
    </AuthContext.Consumer>
  );
};


export default HomeScreen;